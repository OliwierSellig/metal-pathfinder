name: Pull Request

on:
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: 22.14.0

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run ESLint
        run: bun run lint

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Run unit tests with coverage
        run: bun run test:coverage

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  status-comment:
    name: Status Comment
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const lintStatus = '${{ needs.lint.result }}';
            const testStatus = '${{ needs.test.result }}';

            const statusEmoji = {
              'success': '‚úÖ',
              'failure': '‚ùå',
              'cancelled': 'üö´',
              'skipped': '‚è≠Ô∏è'
            };

            const lintEmoji = statusEmoji[lintStatus] || '‚ùì';
            const testEmoji = statusEmoji[testStatus] || '‚ùì';

            const allSuccessful = lintStatus === 'success' && testStatus === 'success';
            const overallStatus = allSuccessful ? '‚úÖ ALL CHECKS PASSED' : '‚ùå SOME CHECKS FAILED';

            const comment = `## ${overallStatus}

            | Check | Status | Result |
            |-------|--------|--------|
            | ${lintEmoji} **Lint** | \`${lintStatus}\` | Code linting |
            | ${testEmoji} **Unit Tests** | \`${testStatus}\` | Unit tests with coverage |

            ${allSuccessful ? 
              'üéâ All checks passed! This PR is ready for review.' : 
              '‚ö†Ô∏è Please fix the failing checks before merging.'
            }

            ---
            *Automated comment by GitHub Actions*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
